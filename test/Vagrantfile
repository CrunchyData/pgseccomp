Vagrant.configure(2) do |config|
    config.vm.box = "debian/contrib-buster64"

    config.vm.provider :virtualbox do |vb|
        vb.name = "pgseccomp-test"
    end

    # Provision the VM
    config.vm.provision "shell", inline: <<-SHELL
        # Setup environment
        echo 'export PG_VERSION=12' >> /etc/bashrc
        echo 'export PG_VERSION_NODOT=12' >> /etc/bashrc
        echo 'export PG_TESTING=testing/' >> /etc/bashrc
        echo 'export PATH=$PATH:/usr/pgsql-${PG_VERSION?}/bin' >> /etc/bashrc
        source /etc/bashrc

        # Install PostgreSQL
        echo "deb http://deb.debian.org/debian buster-backports main" > /etc/apt/sources.list.d/backports.list
        apt-get -y update
        apt-get -y -t buster-backports install seccomp libseccomp2 libseccomp-dev
        apt-get -y install curl ca-certificates gnupg libkrb5-dev
        curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        apt-get -y update
        apt-get -y install postgresql-${PG_VERSION_NODOT?}

        # Compile & install pgseccomp
        apt-get -y install postgresql-server-dev-${PG_VERSION_NODOT?} gcc libssl-dev llvm-7 llvm-7-tools clang-7
        make -C /pgseccomp install USE_PGXS=1

        # Fixup PostgreSQL cluster
        sudo -u postgres cat /pgseccomp/pgseccomp.conf >> /etc/postgresql/${PG_VERSION?}/main/postgresql.conf
        systemctl restart postgresql@${PG_VERSION?}-main
        sudo -u postgres psql -Xc 'create user vagrant superuser' postgres
        chmod -R 777 /pgseccomp/testtablespace

        # Test pgseccomp
        sudo -u vagrant bash -cl 'make -C /pgseccomp installcheck USE_PGXS=1'
    SHELL

  # Don't share the default vagrant folder
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Mount project path for testing
  config.vm.synced_folder "..", "/pgseccomp"
end
